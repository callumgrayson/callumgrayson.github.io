{"version":3,"file":"static/js/369.2eb2458d.chunk.js","mappings":"4LAEMA,EAAU,MAkEhB,MAhEA,WACE,OAA8CC,EAAAA,EAAAA,UAAS,MAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KA4DA,OA1DAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,6GAKOF,EALP,mBAMWG,EAAgB,IAAIC,KAAKJ,EAAgBK,WAAWC,YACtDF,KAAKG,MAAQJ,EAAgBL,GAPtC,sDAgBSU,EAAcC,aAAaC,QAAQ,cAhB5C,oBAmBWC,EAAkBC,KAAKC,MAAML,MAC7BM,EAAc,IAAIV,KAAKO,EAAgBN,WAAWC,YACrCF,KAAKG,MAAQO,EAAchB,GArBnD,wBAuBOG,EAAmBU,GAvB1B,4CAgC0BI,MACrB,kDAjCL,eAgCSC,EAhCT,iBAmCsBA,EAASC,OAnC/B,eAmCSA,EAnCT,OAoCSC,EAAY,CAChBC,KAAMF,EACNZ,WAAW,IAAID,MAAOgB,cACtBC,MAAO,MAGTZ,aAAaa,QAAQ,YAAaV,KAAKW,UAAUL,IACjDjB,EAAmBiB,GA3CtB,qDAiDGjB,EAAmB,CACjBkB,KAAM,KACNd,WAAW,IAAID,MAAOgB,cACtBC,MAAM,EAAD,KApDV,yDAAD,MAyDKrB,G,SClCT,SAASwB,EAAT,GAAqE,IAA1CC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,OACxD,OAAID,IAAaC,EAAeF,EAKzBA,GAFLG,OAAOJ,EAAYG,IAAWC,OAAOJ,EAAYE,KAKrD,SAASG,EAAaC,EAAQC,GAC5B,IAAMC,EAAMD,EAASE,QAAO,SAACC,EAAKC,EAAKC,GACrC,OAAIN,GAAUK,EAAI,GAEZL,IAAWC,EAASK,EAAM,GAAKL,EAASK,EAAM,GAAG,GAAK,GACjDF,EAIPA,GACEJ,GAAUC,EAASK,EAAM,GAAKL,EAASK,EAAM,GAAG,GAAK,IAAMD,EAAI,GAC/D,IAEKL,EAASK,EAAI,GAGpBD,GACEC,EAAI,IAAMJ,EAASK,EAAM,GAAKL,EAASK,EAAM,GAAG,GAAK,IAAMD,EAAI,GAC/D,IAIMD,IACX,GAEH,MAAO,CACLF,IAAKA,EACLK,cAAeP,EAAS,EAAKE,EAAMF,EAAU,IAAM,GAIvD,IAAMQ,EAAe,CACnBC,GAAI,CACFC,SAAU,MACVT,SAtEkB,CACpB,CAAC,MAAO,OACR,CAACU,EAAAA,EAAU,OAqETC,aAAc,eAEhBC,GAAI,CACFH,SAAU,MACVT,SAvEkB,CACpB,CAAC,KAAO,MACR,CAAC,KAAO,MACR,CAAC,IAAO,IACR,CAAC,KAAQ,IACT,CAACU,EAAAA,EAAU,KAmETC,aAAc,eAEhBE,GAAI,CACFJ,SAAU,MACVT,SArEkB,CACpB,CAAC,IAAO,GACR,CAAC,IAAO,GACR,CAAC,IAAO,KACR,CAAC,IAAO,GACR,CAAC,KAAQ,MACT,CAAC,KAAQ,IACT,CAAC,IAAQ,IACT,CAAC,KAAQ,IACT,CAAC,KAAQ,MACT,CAAC,KAAQ,IACT,CAAC,IAAQ,IACT,CAAC,IAAS,IACV,CAACU,EAAAA,EAAU,KAyDTC,aAAc,cA8HlB,MA1HA,WACE,OAA8B5C,EAAAA,EAAAA,UAAS,MAAvC,eAAO+C,EAAP,KAAgBC,EAAhB,KACA,GAA4BhD,EAAAA,EAAAA,UAAS,KAArC,eAAOgC,EAAP,KAAeiB,EAAf,KACA,GAAgCjD,EAAAA,EAAAA,UAC9B+B,EAAaC,EAAQQ,EAAaO,GAASd,WAD7C,eAAOiB,EAAP,KAAiBC,EAAjB,KAGMC,EAAkBC,IAOxB,SAASC,EAAoBC,GAC3BP,EAAWO,EAAEC,OAAOC,MACpBN,EAAYpB,EAAaC,EAAQQ,EAAae,EAAEC,OAAOC,MAAMxB,WAG/D,IAAMyB,EAAY1B,EAASkB,EAAShB,IAEpC,OACE,4BACE,2CACCyB,OAAOC,QAAQpB,GAAcqB,KAAI,SAACC,GAAD,OAChC,mBAEEL,KAAMK,EAAc,GACpBC,QAAST,EACTU,MAAO,CACLC,gBACEH,EAAc,KAAOf,EAAU,aAAe,WANpD,SASGe,EAAc,GAAGlB,cARbkB,EAAc,QAWvB,uCAAetB,EAAaO,GAASL,aACrC,kBACEwB,KAAK,SACLT,KAAK,SACLU,GAAG,SACHC,SAjCN,SAA4Bb,GAC1B,IAAMc,EAAcvC,OAAOyB,EAAEC,OAAOc,OACpCrB,EAAUoB,GACVlB,EAAYpB,EAAasC,EAAa7B,EAAaO,GAASd,YA+BxDqC,MAAOtC,KAGT,0CAEA,mBAAOuC,UAAU,uBAAjB,WACE,kBAAOA,UAAU,4BAAjB,UACE,2BACE,mCACA,yCAGJ,2BACG/B,EAAaO,GAASd,SAAS4B,KAAI,SAACW,EAASlC,GAAV,OAClC,2BACE,wBAAKkC,EAAQ,GAAGC,oBAChB,wBAAKD,EAAQ,GAAGE,QAAQ,OAFjBpC,YAQf,yCAEA,wCACA,iBAAKiC,UAAU,WAAf,WACE,gBAAKA,UAAU,aAAf,UACE,yBACGrB,EAAShB,IAAIuC,iBADhB,IACmCjC,EAAaO,GAASL,eAG3D,gBAAK6B,UAAU,aAAf,UACE,yBAAIrB,EAASX,cAAcoC,YAAY,GAAvC,4BAGJ,yCACA,iBAAKJ,UAAU,WAAf,WACE,gBAAKA,UAAU,aAAf,UACE,yBACGnB,GACC3B,EAAgB,CACdC,YAAa0B,EAAgBhC,KAAKwD,MAClCjD,OAAQ+B,EACR9B,SAAUY,EAAaO,GAASL,SAChCb,OAAQ,QACP4C,iBAAkB,IAPzB,YAWF,gBAAKF,UAAU,aAAf,UACE,yBACGnB,GACC3B,EAAgB,CACdC,YAAa0B,EAAgBhC,KAAKwD,MAClCjD,OAAQ+B,EACR9B,SAAUY,EAAaO,GAASL,SAChCb,OAAQ,QACP4C,iBAAkB,IAPzB,YAWF,gBAAKF,UAAU,aAAf,UACE,yBACGnB,GACC3B,EAAgB,CACdC,YAAa0B,EAAgBhC,KAAKwD,MAClCjD,OAAQ+B,EACR9B,SAAUY,EAAaO,GAASL,SAChCb,OAAQ,QACP4C,iBAAkB,IAPzB","sources":["components/TaxCalculator/useGetExchangeRates.js","components/TaxCalculator/TaxCalculator.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst dayMils = 86_400_000;\r\n\r\nfunction useGetExchangeRates() {\r\n  const [latestRatesEuro, setLatestRatesEuro] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      try {\r\n        /**\r\n         * Check rates in state\r\n         */\r\n        if (latestRatesEuro) {\r\n          const rateTimestamp = new Date(latestRatesEuro.timeStamp).valueOf();\r\n          if (Date.now() - rateTimestamp < dayMils) {\r\n            // Rates in state are up-to-date\r\n            return;\r\n          }\r\n        }\r\n\r\n        /**\r\n         * Check rates in localStorage\r\n         */\r\n        const lsEuroRates = localStorage.getItem(\"euroRates\");\r\n\r\n        if (lsEuroRates) {\r\n          const lsEuroRatesJson = JSON.parse(lsEuroRates);\r\n          const lsTimestamp = new Date(lsEuroRatesJson.timeStamp).valueOf();\r\n          if (lsTimestamp && Date.now() - lsTimestamp < dayMils) {\r\n            // Rates in localStorage are ok - setting to state\r\n            setLatestRatesEuro(lsEuroRatesJson);\r\n            return;\r\n          }\r\n        }\r\n\r\n        /**\r\n         * Fetch rates and set to state and localStorage\r\n         */\r\n\r\n        const response = await fetch(\r\n          \"https://api.exchangerate-api.com/v4/latest/EUR\"\r\n        );\r\n        const json = await response.json();\r\n        const euroRates = {\r\n          data: json,\r\n          timeStamp: new Date().toISOString(),\r\n          error: null,\r\n        };\r\n\r\n        localStorage.setItem(\"euroRates\", JSON.stringify(euroRates));\r\n        setLatestRatesEuro(euroRates);\r\n        return;\r\n      } catch (error) {\r\n        /**\r\n         * Handle error in getting rates\r\n         */\r\n        setLatestRatesEuro({\r\n          data: null,\r\n          timeStamp: new Date().toISOString(),\r\n          error: error,\r\n        });\r\n      }\r\n    })();\r\n  });\r\n  return latestRatesEuro;\r\n}\r\n\r\nexport default useGetExchangeRates;\r\n","import { useState } from \"react\";\r\nimport useGetExchangeRates from \"./useGetExchangeRates\";\r\nimport \"./styles.css\";\r\n\r\nconst taxBracketsNL = [\r\n  [69399, 37.07],\r\n  [Infinity, 49.5],\r\n];\r\nconst taxBracketsNZ = [\r\n  [14000, 10.5],\r\n  [48000, 17.5],\r\n  [70000, 30],\r\n  [180000, 33],\r\n  [Infinity, 39],\r\n];\r\nconst taxBracketsSG = [\r\n  [20000, 0],\r\n  [30000, 2],\r\n  [40000, 3.5],\r\n  [80000, 7],\r\n  [120000, 11.5],\r\n  [160000, 15],\r\n  [200000, 18],\r\n  [240000, 19],\r\n  [280000, 19.5],\r\n  [320000, 20],\r\n  [500000, 22],\r\n  [1000000, 23],\r\n  [Infinity, 24],\r\n];\r\n\r\nfunction convertCurrency({ ratesObject, amount, fromCode, toCode }) {\r\n  if (fromCode === toCode) return amount;\r\n\r\n  const relativeExchange =\r\n    Number(ratesObject[toCode]) / Number(ratesObject[fromCode]);\r\n\r\n  return amount * relativeExchange;\r\n}\r\n\r\nfunction calculateTax(income, brackets) {\r\n  const tax = brackets.reduce((acc, cur, idx) => {\r\n    if (income <= cur[0]) {\r\n      // If it's less than the last bracket do nothing\r\n      if (income <= (brackets[idx - 1] ? brackets[idx - 1][0] : 0)) {\r\n        return acc;\r\n      }\r\n      // Add the tax on the difference\r\n      return (\r\n        acc +\r\n        ((income - (brackets[idx - 1] ? brackets[idx - 1][0] : 0)) * cur[1]) /\r\n          100\r\n      );\r\n    } else if (income > cur[0]) {\r\n      // Add the whole bracket worth of tax to accumulator\r\n      return (\r\n        acc +\r\n        ((cur[0] - (brackets[idx - 1] ? brackets[idx - 1][0] : 0)) * cur[1]) /\r\n          100\r\n      );\r\n    }\r\n    // Default\r\n    else return acc;\r\n  }, 0);\r\n\r\n  return {\r\n    tax: tax,\r\n    effectiveRate: income > 0 ? (tax / income) * 100 : 0,\r\n  };\r\n}\r\n\r\nconst countriesMap = {\r\n  NL: {\r\n    currency: \"EUR\",\r\n    brackets: taxBracketsNL,\r\n    countryTitle: \"Netherlands\",\r\n  },\r\n  NZ: {\r\n    currency: \"NZD\",\r\n    brackets: taxBracketsNZ,\r\n    countryTitle: \"New Zealand\",\r\n  },\r\n  SG: {\r\n    currency: \"SGD\",\r\n    brackets: taxBracketsSG,\r\n    countryTitle: \"Singapore\",\r\n  },\r\n};\r\n\r\nfunction TaxCalculator() {\r\n  const [country, setCountry] = useState(\"SG\");\r\n  const [income, setIncome] = useState(100000);\r\n  const [taxToPay, setTaxToPay] = useState(\r\n    calculateTax(income, countriesMap[country].brackets)\r\n  );\r\n  const latestEuroRates = useGetExchangeRates();\r\n\r\n  function handleIncomeChange(e) {\r\n    const incomeValue = Number(e.target.value);\r\n    setIncome(incomeValue);\r\n    setTaxToPay(calculateTax(incomeValue, countriesMap[country].brackets));\r\n  }\r\n  function handleCountryChange(e) {\r\n    setCountry(e.target.name);\r\n    setTaxToPay(calculateTax(income, countriesMap[e.target.name].brackets));\r\n  }\r\n\r\n  const inTheHand = income - taxToPay.tax;\r\n\r\n  return (\r\n    <div>\r\n      <h3>Tax Calculator</h3>\r\n      {Object.entries(countriesMap).map((countriesItem) => (\r\n        <button\r\n          key={countriesItem[0]}\r\n          name={countriesItem[0]}\r\n          onClick={handleCountryChange}\r\n          style={{\r\n            backgroundColor:\r\n              countriesItem[0] === country ? \"lightgreen\" : \"initial\",\r\n          }}\r\n        >\r\n          {countriesItem[1].countryTitle}\r\n        </button>\r\n      ))}\r\n      <h4>Currency: {countriesMap[country].currency}</h4>\r\n      <input\r\n        type=\"number\"\r\n        name=\"income\"\r\n        id=\"income\"\r\n        onChange={handleIncomeChange}\r\n        value={income}\r\n      />\r\n\r\n      <h4>Tax Brackets</h4>\r\n\r\n      <table className=\"tax-calculator-table\">\r\n        <thead className=\"tax-calculator-table-head\">\r\n          <tr>\r\n            <th>Up to</th>\r\n            <th>Rate %</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {countriesMap[country].brackets.map((bracket, idx) => (\r\n            <tr key={idx}>\r\n              <td>{bracket[0].toLocaleString()}</td>\r\n              <td>{bracket[1].toFixed(1)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <h4>Tax Details</h4>\r\n\r\n      <h5>Tax to pay</h5>\r\n      <div className=\"flex-row\">\r\n        <div className=\"spaced-box\">\r\n          <p>\r\n            {taxToPay.tax.toLocaleString()} {countriesMap[country].currency}\r\n          </p>\r\n        </div>\r\n        <div className=\"spaced-box\">\r\n          <p>{taxToPay.effectiveRate.toPrecision(4)}% Effective Rate</p>\r\n        </div>\r\n      </div>\r\n      <h5>In the hand</h5>\r\n      <div className=\"flex-row\">\r\n        <div className=\"spaced-box\">\r\n          <p>\r\n            {latestEuroRates &&\r\n              convertCurrency({\r\n                ratesObject: latestEuroRates.data.rates,\r\n                amount: inTheHand,\r\n                fromCode: countriesMap[country].currency,\r\n                toCode: \"EUR\",\r\n              }).toLocaleString()}{\" \"}\r\n            EUR\r\n          </p>\r\n        </div>\r\n        <div className=\"spaced-box\">\r\n          <p>\r\n            {latestEuroRates &&\r\n              convertCurrency({\r\n                ratesObject: latestEuroRates.data.rates,\r\n                amount: inTheHand,\r\n                fromCode: countriesMap[country].currency,\r\n                toCode: \"SGD\",\r\n              }).toLocaleString()}{\" \"}\r\n            SGD\r\n          </p>\r\n        </div>\r\n        <div className=\"spaced-box\">\r\n          <p>\r\n            {latestEuroRates &&\r\n              convertCurrency({\r\n                ratesObject: latestEuroRates.data.rates,\r\n                amount: inTheHand,\r\n                fromCode: countriesMap[country].currency,\r\n                toCode: \"NZD\",\r\n              }).toLocaleString()}{\" \"}\r\n            NZD\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <pre>{JSON.stringify(latestEuroRates, null, 2)}</pre> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaxCalculator;\r\n"],"names":["dayMils","useState","latestRatesEuro","setLatestRatesEuro","useEffect","rateTimestamp","Date","timeStamp","valueOf","now","lsEuroRates","localStorage","getItem","lsEuroRatesJson","JSON","parse","lsTimestamp","fetch","response","json","euroRates","data","toISOString","error","setItem","stringify","convertCurrency","ratesObject","amount","fromCode","toCode","Number","calculateTax","income","brackets","tax","reduce","acc","cur","idx","effectiveRate","countriesMap","NL","currency","Infinity","countryTitle","NZ","SG","country","setCountry","setIncome","taxToPay","setTaxToPay","latestEuroRates","useGetExchangeRates","handleCountryChange","e","target","name","inTheHand","Object","entries","map","countriesItem","onClick","style","backgroundColor","type","id","onChange","incomeValue","value","className","bracket","toLocaleString","toFixed","toPrecision","rates"],"sourceRoot":""}