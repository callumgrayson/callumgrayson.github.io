{"version":3,"file":"static/js/388.58c1010d.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Anagrams/createTree.js","components/Anagrams/Loader.js","components/Anagrams/v1.js","components/Anagrams/Anagrams.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","//\r\nconst setWordsToObject = (list) => {\r\n\tconst len = list.length;\r\n\tlet wordsObj = {};\r\n\tlet currentNode = {};\r\n\r\n\t// iterate through list or words\r\n\tfor (let i = 0; i < len; i++) {\r\n\t\tlet word = list[i];\r\n\t\tlet lenWord = word.length;\r\n\t\tcurrentNode = wordsObj;\r\n\r\n\t\t// iterate through chars in word\r\n\t\tfor (let j = 0; j < lenWord; j++) {\r\n\t\t\tlet char = word[j];\r\n\t\t\tlet end = j === lenWord - 1 ? true : false;\r\n\t\t\tlet nodeExists = currentNode.hasOwnProperty(char);\r\n\r\n\t\t\tif (!nodeExists) {\r\n\t\t\t\tcurrentNode[char] = { end: end };\r\n\t\t\t} else {\r\n\t\t\t\tif (currentNode[char].end === false && end === true) {\r\n\t\t\t\t\tcurrentNode[char].end = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcurrentNode = currentNode[char];\r\n\t\t}\r\n\t}\r\n\treturn wordsObj;\r\n};\r\n\r\nexport const handleData = async (list) => {\r\n\tconst split = list.split('\\n').map((w) => w.toLowerCase());\r\n\r\n\tconst wordsObj = setWordsToObject(split);\r\n\r\n\treturn [ wordsObj, split ];\r\n};\r\n\r\nexport const checkAnagrams = async (iWord, inArr) => {\r\n\tlet inWord = iWord.trim().toLowerCase();\r\n\tconsole.log('inWord', inWord);\r\n\tlet startSearch = Date.now();\r\n\tconst inLength = inWord.length;\r\n\tconst inWordSorted = inWord.split('').sort().join('');\r\n\tlet temp = [];\r\n\tinArr.forEach((word) => {\r\n\t\tif (word.length === Number(inLength)) {\r\n\t\t\tconst sorted = word.split('').sort().join('');\r\n\t\t\tif (sorted === inWordSorted) {\r\n\t\t\t\ttemp.push(word);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tlet endSearch = Date.now();\r\n\tlet durationSearch = endSearch - startSearch;\r\n\tconsole.log('durationSearch', durationSearch);\r\n\r\n\t// console.log('temp', temp);\r\n\treturn temp;\r\n};\r\n\r\nexport const getXLengthWords = async (inLength, wArr) => {\r\n\t//\r\n\tlet startSearch = Date.now();\r\n\tlet temp = {};\r\n\twArr.forEach((word) => {\r\n\t\tif (word.length === Number(inLength)) {\r\n\t\t\tconst sorted = word.split('').sort().join('');\r\n\t\t\tif (!temp.hasOwnProperty(sorted)) {\r\n\t\t\t\ttemp[sorted] = [ word ];\r\n\t\t\t} else {\r\n\t\t\t\ttemp[sorted] = [ ...temp[sorted], word ];\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tconst xLengthAnagrams = [];\r\n\tObject.values(temp).forEach((arr) => {\r\n\t\tif (arr.length > 1) xLengthAnagrams.push(arr);\r\n\t});\r\n\tlet endSearch = Date.now();\r\n\tlet durationSearch = endSearch - startSearch;\r\n\r\n\tlet startSort = Date.now();\r\n\tconst sortedAnagrams = xLengthAnagrams.sort((a, b) => b.length - a.length);\r\n\tlet endSort = Date.now();\r\n\tlet durationSort = endSort - startSort;\r\n\r\n\t// console.log('sortedAnagrams', sortedAnagrams);\r\n\tconsole.log('durationSearch', durationSearch);\r\n\tconsole.log('durationSort', durationSort);\r\n\treturn sortedAnagrams;\r\n};\r\n\r\n////////////////////////////////////////////////////\r\n// const checkNode = (inNode) => {\r\n// \tconst { currentNode, preArr, restArr } = inNode;\r\n// \tconst nextObjects = [];\r\n// \tconst len = restArr.length;\r\n\r\n// \tif (len === 1) {\r\n// \t\t// we are checking for the last letter\r\n// \t\t// if it exists and end is true we have a match\r\n// \t\tlet finalChar = restArr[0];\r\n// \t\tif (\r\n// \t\t\tcurrentNode.hasOwnProperty(finalChar) &&\r\n// \t\t\tcurrentNode[finalChar].end === true\r\n// \t\t) {\r\n// \t\t\tconst match = [ ...preArr, finalChar ].join('');\r\n// \t\t\tnextObjects.push({ match: match });\r\n// \t\t}\r\n// \t} else {\r\n// \t\tfor (let i = 0; i < len; i++) {\r\n// \t\t\tlet before = [ ...restArr.slice(0, i) ];\r\n// \t\t\tlet char = restArr[i];\r\n// \t\t\tlet after = [ ...restArr.slice(i + 1) ];\r\n\r\n// \t\t\tif (char && currentNode.hasOwnProperty(char)) {\r\n// \t\t\t\tconst newObj = {\r\n// \t\t\t\t\tcurrentNode: currentNode[char],\r\n// \t\t\t\t\tpreArr: [ ...preArr, char ],\r\n// \t\t\t\t\trestArr: [ ...before, ...after ]\r\n// \t\t\t\t};\r\n// \t\t\t\tnextObjects.push(newObj);\r\n// \t\t\t}\r\n// \t\t}\r\n// \t}\r\n\r\n// \treturn nextObjects;\r\n// };\r\n\r\n// export const checkAnagrams = async (inWord, inTree) => {\r\n// \t// Search and timings\r\n// \tlet startSearch = Date.now();\r\n// \tconst wArr = inWord.split('');\r\n// \tlet q = [ { currentNode: inTree, preArr: [], restArr: wArr } ];\r\n// \tlet anagramsSet = new Set();\r\n\r\n// \twhile (q.length) {\r\n// \t\tlet c = q.shift();\r\n\r\n// \t\tif (c.restArr.length) {\r\n// \t\t\tlet nodeInfo = checkNode(c);\r\n// \t\t\t// console.log('nodeInfo', nodeInfo);\r\n// \t\t\tnodeInfo.forEach((el) => {\r\n// \t\t\t\tif (el.hasOwnProperty('match')) {\r\n// \t\t\t\t\tanagramsSet.add(el.match);\r\n// \t\t\t\t} else {\r\n// \t\t\t\t\tq.push(el);\r\n// \t\t\t\t}\r\n// \t\t\t});\r\n// \t\t}\r\n// \t}\r\n// \tconst anagrams = Array.from(anagramsSet);\r\n// \tlet endSearch = Date.now();\r\n// \tlet durationSearch = endSearch - startSearch;\r\n// \tconsole.log('durationSearch', durationSearch);\r\n// \t// console.log('anagrams', anagrams);\r\n// \treturn anagrams;\r\n// };\r\n","import React from 'react';\r\n\r\nconst Loader = (props) => {\r\n\treturn (\r\n\t\t<div className=\"loaderBox\">\r\n\t\t\t{props.loading && `...${props.text}...`}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { handleData, checkAnagrams, getXLengthWords } from \"./createTree\";\r\nimport Loader from \"./Loader\";\r\nimport \"./v1.css\";\r\n\r\nconst V1 = (props) => {\r\n  const [listSize, setListSize] = useState(\"small\");\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [displayAnagrams, setDisplayAnagrams] = useState([]);\r\n\r\n  const [searchNumber, setSearchNumber] = useState(\"\");\r\n  const [searchNumberInput, setSearchNumberInput] = useState(\"\");\r\n  const [displayLengthAnagrams, setDisplayLengthAnagrams] = useState([]);\r\n  const [tree, setTree] = useState({});\r\n  const [wordsArray, setWordsArray] = useState({});\r\n\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [isSearchLet, setIsSearchLet] = useState(false);\r\n  const [isSearchLen, setIsSearchLen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getUrl = () => {\r\n      switch (listSize) {\r\n        case \"small\":\r\n          return \"https://gist.githubusercontent.com/callumgrayson/452618a6cccc79dcfd5bcada74169d8f/raw/e2afcae22e0da19acafe94818fd237da855bbc2c/corncob.txt\";\r\n        case \"large\":\r\n          return \"https://gist.githubusercontent.com/callumgrayson/caf0f4f67ecbbd13579441a59facfefc/raw/61c2ce99798596bcf2203b91801e64d4ba0545c8/words.txt\";\r\n        default:\r\n          return \"\";\r\n      }\r\n    };\r\n\r\n    const getData = async () => {\r\n      let data = {};\r\n\r\n      // console.log('tree', tree);\r\n      if (wordsArray && wordsArray.hasOwnProperty(listSize)) {\r\n        // console.log(\r\n        // \t'wordsArray.hasOwnProperty(listSize)',\r\n        // \twordsArray.hasOwnProperty(listSize)\r\n        // );\r\n        return;\r\n      }\r\n\r\n      // console.log(\r\n      // \t'localStorage.hasOwnProperty(listSize), listSize',\r\n      // \tlocalStorage.hasOwnProperty(listSize),\r\n      // \tlistSize\r\n      // );\r\n\r\n      if (!localStorage.hasOwnProperty(listSize)) {\r\n        const url = getUrl();\r\n        setIsFetching(true);\r\n        const res = await fetch(url);\r\n        data = await res.text();\r\n        // console.log('data', data);\r\n        localStorage.setItem(listSize, data);\r\n      } else {\r\n        data = localStorage.getItem(listSize);\r\n      }\r\n\r\n      // console.log('data[listSize]', data[listSize]);\r\n      let start = Date.now();\r\n      const [wTree, wArr] = await handleData(data);\r\n      // console.log('wTree, wArr', wTree, wArr);\r\n      let end = Date.now();\r\n      let dur = end - start;\r\n      console.log(\"Array preparation duration\", dur);\r\n\r\n      // console.log('tree', tree);\r\n      const newTree = { ...tree, [listSize]: wTree };\r\n      const newArr = { ...wordsArray, [listSize]: wArr };\r\n      setTree(newTree);\r\n      setWordsArray(newArr);\r\n      setIsFetching(false);\r\n    };\r\n\r\n    getData();\r\n  }, [listSize, tree, wordsArray]);\r\n\r\n  useEffect(() => {\r\n    // console.log('tree', tree);\r\n    const getAnagrams = async (inTerm) => {\r\n      // let anags = await checkAnagrams(inTerm, tree[listSize]);\r\n      setIsSearchLet(true);\r\n      let anags = await checkAnagrams(inTerm, wordsArray[listSize]);\r\n      if (searchTerm && !anags.length) {\r\n        anags = [\"There are no anagrams\"];\r\n      }\r\n      setDisplayAnagrams(anags);\r\n      setIsSearchLet(false);\r\n    };\r\n\r\n    if (searchTerm && wordsArray.hasOwnProperty(listSize))\r\n      getAnagrams(searchTerm);\r\n  }, [searchTerm, wordsArray, listSize]);\r\n\r\n  useEffect(() => {\r\n    // console.log('wordsArray', wordsArray);\r\n    const getAnagrams = async (inLength) => {\r\n      setIsSearchLen(true);\r\n      let anags = await getXLengthWords(inLength, wordsArray[listSize]);\r\n      if (searchNumber && !anags.length) {\r\n        anags = [[\"There are no anagrams\"]];\r\n      }\r\n      setDisplayLengthAnagrams(anags);\r\n      setIsSearchLen(false);\r\n    };\r\n\r\n    if (searchNumber && wordsArray.hasOwnProperty(listSize))\r\n      getAnagrams(searchNumber);\r\n  }, [searchNumber, wordsArray, listSize]);\r\n\r\n  const handleChange = (e) => {\r\n    setSearchInput(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSearchTerm(searchInput);\r\n  };\r\n\r\n  const handleNumberChange = (e) => {\r\n    setSearchNumberInput(e.target.value);\r\n  };\r\n  const handleLengthSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSearchNumber(searchNumberInput);\r\n  };\r\n\r\n  const prepareLengthAnagrams = (list) => {\r\n    if (list.length < 1) return [{ 0: [\"\"] }];\r\n    const outObj = {};\r\n    list.forEach((el) => {\r\n      const len = el.length;\r\n      if (outObj.hasOwnProperty(len)) {\r\n        outObj[len].push(el);\r\n      } else {\r\n        outObj[len] = [el];\r\n      }\r\n    });\r\n\r\n    const descendingLengths = Object.keys(outObj).sort((a, b) => b - a);\r\n    const outArr = descendingLengths.map((key) => {\r\n      return { [key]: outObj[key] };\r\n    });\r\n    return outArr;\r\n  };\r\n  return (\r\n    <div className=\"v1\">\r\n      <div>\r\n        <span>Dictionary size: </span>\r\n        <select\r\n          value={listSize}\r\n          onChange={(e) => {\r\n            // console.log('e.target.value', e.target.value);\r\n            setListSize(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"small\">Small (58k)</option>\r\n          <option value=\"large\">Large (230k)</option>\r\n        </select>\r\n        <Loader loading={isFetching} text=\"Loading\" />\r\n      </div>\r\n      <div>\r\n        <h3>Anagrams by letters</h3>\r\n        <div className={`formBox${isFetching && \" isFetching\"}`}>\r\n          {!isFetching && (\r\n            <form onSubmit={handleSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                value={searchInput}\r\n                onChange={handleChange}\r\n                maxLength={29}\r\n                placeholder=\"enter word/letters\"\r\n                required\r\n              />\r\n              <button onClick={handleSubmit}>Search</button>\r\n            </form>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          {isSearchLet ? (\r\n            <Loader loading={isSearchLet} text=\"Searching\" />\r\n          ) : (\r\n            <ul>\r\n              {displayAnagrams &&\r\n                displayAnagrams.map((ana, i) => {\r\n                  return <li key={`${i}${ana}`}>{ana}</li>;\r\n                })}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Anagrams by length</h3>\r\n        <div className={`formBox${isFetching && \" isFetching\"}`}>\r\n          {!isFetching && (\r\n            <form onSubmit={handleLengthSubmit}>\r\n              <input\r\n                type=\"number\"\r\n                min={2}\r\n                max={29}\r\n                value={searchNumberInput}\r\n                onChange={handleNumberChange}\r\n                placeholder=\"enter word length\"\r\n                required\r\n                style={{ width: \"173px\" }}\r\n              />\r\n              <button onClick={handleLengthSubmit}>Search</button>\r\n            </form>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {isSearchLen ? (\r\n            <Loader loading={isSearchLen} text=\"Searching\" />\r\n          ) : (\r\n            displayLengthAnagrams.length > 0 &&\r\n            prepareLengthAnagrams(displayLengthAnagrams).map((obj) => {\r\n              let len = obj ? Object.keys(obj)[0] : 0;\r\n              return (\r\n                <div key={len}>\r\n                  <h4>{len === \"1\" ? 0 : len} variations</h4>\r\n                  <ul>\r\n                    {obj[len].map((ana, i) => {\r\n                      return Array.isArray(ana) && ana.length ? (\r\n                        <li key={`${i}${ana[0]}`}>{ana.join(\" - \")}</li>\r\n                      ) : (\r\n                        ana\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default V1;\r\n","import V1 from \"./v1\";\r\nimport \"./Anagrams.css\";\r\n\r\nfunction Anagrams() {\r\n  return (\r\n    <div className=\"Anagrams\">\r\n      <h2>Anagrams</h2>\r\n      <V1 />\r\n    </div>\r\n  );\r\n}\r\nexport default Anagrams;\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","setWordsToObject","list","len","wordsObj","currentNode","word","lenWord","j","char","end","hasOwnProperty","handleData","split","map","w","toLowerCase","checkAnagrams","iWord","inArr","inWord","trim","console","log","startSearch","Date","now","inLength","inWordSorted","sort","join","temp","Number","endSearch","durationSearch","getXLengthWords","wArr","sorted","xLengthAnagrams","values","arr","startSort","sortedAnagrams","a","b","endSort","durationSort","props","className","loading","text","useState","listSize","setListSize","searchTerm","setSearchTerm","searchInput","setSearchInput","displayAnagrams","setDisplayAnagrams","searchNumber","setSearchNumber","searchNumberInput","setSearchNumberInput","displayLengthAnagrams","setDisplayLengthAnagrams","tree","setTree","wordsArray","setWordsArray","isFetching","setIsFetching","isSearchLet","setIsSearchLet","isSearchLen","setIsSearchLen","useEffect","getUrl","getData","data","localStorage","url","fetch","res","setItem","getItem","start","wTree","dur","newTree","newArr","getAnagrams","inTerm","anags","handleSubmit","e","preventDefault","handleLengthSubmit","onChange","onSubmit","type","maxLength","placeholder","required","onClick","ana","min","max","style","width","outObj","el","prepareLengthAnagrams","Array","isArray","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}