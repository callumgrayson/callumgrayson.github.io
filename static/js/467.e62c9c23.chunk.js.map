{"version":3,"file":"static/js/467.e62c9c23.chunk.js","mappings":"mLAiEA,MA5DA,WACE,OAA0BA,EAAAA,EAAAA,UAAmB,IAA7C,eAAOC,EAAP,KAAcC,EAAd,KAoBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAEIC,EAFEC,EAAS,kBAAOJ,GAAP,CAAcA,EAAMK,SAUnC,OANIL,EAAMK,OAAS,KACjBF,EAAIG,YAAW,WACbL,EAASG,KACR,MAGE,kBAAMG,aAAaJ,MACzB,CAACH,KAGF,iCACE,mBAAQQ,UAAU,QAAQC,QApB9B,WACER,EAAS,KAmBP,oBAGA,iBAAKO,UAAU,gBAAf,WACE,gBAAKA,UAAU,cAAf,SACGR,EAAMU,KAAI,SAACC,EAAKC,GAAN,OACT,gBAAeJ,UAAU,MAAzB,SACGG,GADOA,SAKd,gBAAKH,UAAU,uBAAf,SACGR,EAAMU,KAAI,SAACC,EAAKC,GAAN,OACT,gBAAeJ,UAAU,MAAzB,SACGG,GADOA,SAKd,gBAAKH,UAAU,0BAAf,SACGR,EAAMU,KAAI,SAACC,EAAKC,GAAN,OACT,gBAAeJ,UAAU,MAAzB,SACGG,GADOA,SAKd,gBAAKH,UAAU,6BAAf,SACGR,EAAMU,KAAI,SAACC,EAAKC,GAAN,OACT,gBAAeJ,UAAU,MAAzB,SACGG,GADOA,gB,8ECnDP,SAASE,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["components/FlexFills/index.tsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\n// type Props = {}\r\n\r\nfunction FlexFills() {\r\n  const [boxes, setBoxes] = useState<number[]>([]);\r\n\r\n  function handleRerun() {\r\n    setBoxes([]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const nextBoxes = [...boxes, boxes.length];\r\n\r\n    let t: any;\r\n\r\n    if (boxes.length < 13) {\r\n      t = setTimeout(() => {\r\n        setBoxes(nextBoxes);\r\n      }, 400);\r\n    }\r\n\r\n    return () => clearTimeout(t);\r\n  }, [boxes]);\r\n\r\n  return (\r\n    <>\r\n      <button className=\"rerun\" onClick={handleRerun}>\r\n        Rerun\r\n      </button>\r\n      <div className=\"quarter-split\">\r\n        <div className=\"quarter-one\">\r\n          {boxes.map((box, idx) => (\r\n            <div key={box} className=\"box\">\r\n              {box}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"quarter-one vertical\">\r\n          {boxes.map((box, idx) => (\r\n            <div key={box} className=\"box\">\r\n              {box}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"quarter-one reverse-row\">\r\n          {boxes.map((box, idx) => (\r\n            <div key={box} className=\"box\">\r\n              {box}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"quarter-one reverse-column\">\r\n          {boxes.map((box, idx) => (\r\n            <div key={box} className=\"box\">\r\n              {box}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FlexFills;\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["useState","boxes","setBoxes","useEffect","t","nextBoxes","length","setTimeout","clearTimeout","className","onClick","map","box","idx","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}